"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.8.18.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
# from django.conf import global_settings

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6l2+&-aj=tf0&be37_%4rc1!&td=o_o@s&vc2ptl2n97a#lm4l'
# SECRET_KEY = os.environ['SECRET_KEY']  # for deploy

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False  # for deploy

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'testserver']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'restaurants',  # install restaurants application, django modify
    'zoo',         # for test purpose
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates').replace('\\', '/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.request'
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

# sqlite
# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# -*default database*-
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# # MySQL
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'db_restaurant',
#         'USER': 'ranzo',
#         'PASSWORD': '6014',
#         'HOST': '',
#         'PORT': '',
#         # 'TEST': {'NAME': 'test_db_restaurant'},
#     }
# }

# Postgresql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'db_restaurant',
        'USER': 'shark',
        'PASSWORD': '6014',
        'HOST': '',
        'PORT': '',
        # 'TEST': {'NAME': 'test_db_restaurant'},
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# LANGUAGE_CODE = 'en-us'
# LANGUAGE_CODE = 'zh-TW'
LANGUAGE_CODE = 'zh-hant'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATIC_DIRS = os.path.join(BASE_DIR, 'static')

STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

SESSION_SERIALIZER = ('django.contrib.sessions.serializers' +
                      '.PickleSerializer')

# TEMPLATE_CONTEXT_PROCESSORS = global_settings.TEMPLATE_CONTEXT_PROCESSORS + (
#     'django.core.context_processors.request',
# )

LOGIN_REDIRECT_URL = "/index/"

# FIXTURE_DIRS = os.path.join(BASE_DIR, 'fixtures')

# -----settings for production-----
# mail backend service for production
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'wmsback@gmail.com'
EMAIL_HOST_PASSWORD = 'backlight'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'required_debug_false': {  # filter only debug is false
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        # mail to administrator when msg is error and debug != false
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['required_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        # django.request would set server error to ERROR
        # 400, 404 level WARNING
        # mail_admins handler would deal with level > ERROR
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': 'True',
        },
    }
}

ADMINS = (  # error 500
    ('admin1', 'wemism27@gmail.com'),
)

MANAGERS = (  # error 404
    ('manager1', 'manager1@gmail.com'),
)
